---
import Layout from '../../layouts/Layout.astro';
import {
  data,
  getPaperById,
  getNotationsByPaperId,
} from '../../lib/data-separated';
import { url } from '../../lib/url';
import TypstRender from '../../components/typst-render/index.astro';

export async function getStaticPaths() {
  return data.papers.map((paper) => ({
    params: { id: paper.id },
  }));
}

const { id } = Astro.params;
const paper = getPaperById(id!);
const notations = getNotationsByPaperId(id!);

if (!paper) {
  return Astro.redirect(url('/404'));
}
---

<Layout title={paper.title}>
  <div>
    <a href={url('/papers')} class="text-primary hover:text-primary/80 inline-flex items-center gap-1">
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
      </svg>
      Back to Papers
    </a>

    <h1 class="mt-4 text-3xl font-bold text-gray-900">{paper.title}</h1>

    <div class="mt-6 bg-white shadow-lg rounded-lg overflow-hidden">
      <div class="p-6 space-y-4">
        <div>
          <h3 class="text-sm font-medium text-gray-600 uppercase tracking-wide">Authors</h3>
          <p class="mt-1 text-lg text-gray-900">{paper.authors.join(', ')}</p>
        </div>

        <div>
          <h3 class="text-sm font-medium text-gray-600 uppercase tracking-wide">Year</h3>
          <p class="mt-1 text-lg text-gray-900">{paper.year}</p>
        </div>

        {
          paper.abstract && (
            <div>
              <h3 class="text-sm font-medium text-gray-600 uppercase tracking-wide">Abstract</h3>
              <p class="mt-2 text-gray-700 leading-relaxed">{paper.abstract}</p>
            </div>
          )
        }

        <div>
          <h3 class="text-sm font-medium text-gray-600 uppercase tracking-wide">BibTeX</h3>
          <pre class="mt-2 bg-gray-50 p-4 rounded-lg text-sm overflow-x-auto border border-gray-200">
            <code>{paper.bibtex}</code>
          </pre>
        </div>
      </div>
    </div>

    {
      notations.length > 0 && (
        <div class="mt-8">
          <h2 class="text-2xl font-bold text-gray-900 mb-4">
            Notations Used in This Paper
          </h2>
          <div class="space-y-4">
            {notations.map((notation) => {
              const usage = notation.papers.find((p) => p.paperId === paper.id);

              return (
                <div class="bg-white shadow rounded-lg p-6 hover:shadow-md transition-shadow">
                  <div class="flex items-start justify-between gap-4">
                    <div class="flex-1">
                      <a
                        href={url(`/notations/${notation.id}`)}
                        class="group"
                      >
                        <h3 class="text-lg font-semibold text-gray-900 group-hover:text-primary transition-colors flex items-center gap-2 flex-wrap">
                          <span class="bg-gray-50 rounded px-3 py-1 inline-flex items-center border border-gray-200">
                            <TypstRender src={notation.typstString} />
                          </span>
                          <span class="text-gray-500 font-normal text-base">for</span>
                          <span>{notation.name}</span>
                        </h3>
                      </a>
                      
                      <p class="text-gray-700 mt-2">
                        {notation.description}
                      </p>

                      <div class="mt-3 flex items-start gap-4">
                        <div class="text-sm">
                          <span class="text-gray-600">Typst:</span>
                          <code class="ml-2 bg-gray-100 px-2 py-0.5 rounded font-mono">
                            {notation.typstString}
                          </code>
                        </div>
                        {notation.latexString && (
                          <div class="text-sm">
                            <span class="text-gray-600">LaTeX:</span>
                            <code class="ml-2 bg-gray-100 px-2 py-0.5 rounded font-mono">
                              {notation.latexString}
                            </code>
                          </div>
                        )}
                      </div>

                      {usage && (
                        <div class="mt-4 bg-blue-50 rounded-lg p-3 text-sm">
                          {usage.context && (
                            <p class="text-gray-700">
                              <strong>Context:</strong> {usage.context}
                            </p>
                          )}
                          {usage.pageNumber && (
                            <p class="text-gray-600 mt-1">
                              Referenced on page {usage.pageNumber}
                            </p>
                          )}
                        </div>
                      )}
                    </div>
                    {usage?.isPrimaryDefinition && (
                      <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800 whitespace-nowrap">
                        Primary Definition
                      </span>
                    )}
                  </div>
                </div>
              );
            })}
          </div>
        </div>
      )
    }
  </div>
</Layout>